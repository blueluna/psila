// Where these removed from revision 21 of the standard?

use crate::common::address::{ExtendedAddress, EXTENDED_ADDRESS_SIZE};
use crate::pack::{Pack, PackFixed};
use crate::Error;

const DATA_SIZE: usize = 16;

/// Key establishment command
#[derive(Clone, Debug, PartialEq)]
pub struct KeyEstablishment {
    /// Extended address of the initator of this command
    pub initiator: ExtendedAddress,
    /// Extended address of the responder of this command
    pub responder: ExtendedAddress,
    /// Command data. The data is following for the different key
    /// establishment commands,
    ///  - SKKE1: QEU generated by the initator
    ///  - SKKE2: QEV generated by the responder
    ///  - SKKE3: MacTag2 generated by the initator
    ///  - SKKE4: MacTag1 generated by the responder
    pub data: [u8; DATA_SIZE],
}

impl Pack<KeyEstablishment, Error> for KeyEstablishment {
    fn pack(&self, data: &mut [u8]) -> Result<usize, Error> {
        if data.len() < 32 {
            return Err(Error::WrongNumberOfBytes);
        }
        let mut offset = 0;
        self.initiator
            .pack(&mut data[offset..offset + EXTENDED_ADDRESS_SIZE])?;
        offset += EXTENDED_ADDRESS_SIZE;
        self.responder
            .pack(&mut data[offset..offset + EXTENDED_ADDRESS_SIZE])?;
        offset += EXTENDED_ADDRESS_SIZE;
        data[offset..offset + DATA_SIZE].copy_from_slice(&self.data);
        offset += DATA_SIZE;
        Ok(offset)
    }

    fn unpack(data: &[u8]) -> Result<(Self, usize), Error> {
        if data.len() < 32 {
            return Err(Error::WrongNumberOfBytes);
        }
        let mut offset = 0;
        let initiator = ExtendedAddress::unpack(&data[offset..offset + EXTENDED_ADDRESS_SIZE])?;
        offset += EXTENDED_ADDRESS_SIZE;
        let responder = ExtendedAddress::unpack(&data[offset..offset + EXTENDED_ADDRESS_SIZE])?;
        offset += EXTENDED_ADDRESS_SIZE;
        let mut packet_data = [0u8; DATA_SIZE];
        packet_data.copy_from_slice(&data[offset..offset + DATA_SIZE]);
        offset += DATA_SIZE;
        Ok((
            Self {
                initiator,
                responder,
                data: packet_data,
            },
            offset,
        ))
    }
}
